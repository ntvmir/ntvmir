/*
 * JSP generated by Resin 2.0.5 (built Thu Jan 10 21:43:38 PST 2002)
 */

package _vote;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import tengry.cms.vote.*;
import tengry.cms.*;
import tengry.cms.db.*;
import tengry.cms.core.*;
import tengry.cms.user.*;
import tengry.cms.mailer.*;

public class _xt_0vote__jsp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;
  
public String nodePath(WebTreeNode node)
{
    if(node == null)
        return "/pages";
    return nodePath(node.getParent()) + "/" + node.getCode();
}

public String nodePath(String nodeId)
{
    return nodePath(CMSApplication.getApplication().lookup(nodeId));
}

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    com.caucho.jsp.QPageContext pageContext = (com.caucho.jsp.QPageContext) com.caucho.jsp.QJspFactory.create().getPageContext(this, request, response, null, true, 8192, true);
    javax.servlet.jsp.JspWriter out = (javax.servlet.jsp.JspWriter) pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.http.HttpSession session = pageContext.getSession();
    javax.servlet.ServletContext application = pageContext.getServletContext();
    response.setContentType("text/html; charset=windows-1251");
    request.setCharacterEncoding("CP1251");
    try {
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      
	String      langCode        = null;
	String      pageId          = null;
	String      des             = null;
    User        user            = null;

    langCode = request.getParameter("lang_code");
    if(langCode == null || langCode.trim().length() == 0)
        langCode = CMSApplication.getApplication().getPrimaryLangCode();

	des = CMSApplication.getApplication().getCurrentDesignPath() + "/" + langCode;

	pageId = request.getParameter("id");
	if("".equals(pageId))
		pageId = null;
		
    user = (User)session.getAttribute("ntvmir.user");
    if(user == null)
    {
        String usrid = CMSApplication.getCookie(request, "user.id");
        if(usrid != null && usrid.length() > 0)
        {
            try
            {
                user = User.quickAuthorize(usrid);
            }catch(Exception e){}
        }
    }

	boolean     adminPreview    = false;
	Hashtable   previewInfo     = null;
	adminPreview = (session.getValue("admin.user") != null && "1".equals(request.getParameter("preview")));
	
	previewInfo = (Hashtable)session.getAttribute("admin.previewinfo");
	if(!adminPreview)
		previewInfo = null;

      pageContext.write(_jsp_string1, 0, _jsp_string1.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
        response.setHeader("Pragma","no-cache"); 
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      
    String voteId = request.getParameter("vote_id");
    String redirect = "/page.jsp?id=" + pageId;
    String userIP = request.getRemoteAddr();
    
    try
    {
        Vote vote = new Vote();
        vote.load(voteId);
        String [] items = request.getParameterValues("vote_item_id");
        vote.vote(userIP, items);
    }
    catch(Exception e){}
    response.sendRedirect(redirect);

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      JspFactory.getDefaultFactory().releasePageContext(pageContext);
    }
  }

  private com.caucho.java.LineMap _caucho_line_map;
  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != 2058990002)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Depend depend;
      depend = (com.caucho.vfs.Depend) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public com.caucho.java.LineMap _caucho_getLineMap()
  {
    return _caucho_line_map;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.java.LineMap lineMap,
                   com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    mergePath.addClassPath(getClass().getClassLoader());
    _caucho_line_map = new com.caucho.java.LineMap("_xt_0vote__jsp.java", "/usr/local/apache/htdocs/ntvmir/vote/xt_vote.jsp");
    _caucho_line_map.add("/vote/xt_vote.jsp", 1, 1);
    _caucho_line_map.add("/inc/init_global.jsp", 1, 1);
    _caucho_line_map.add(44, 20);
    _caucho_line_map.add("/vote/xt_vote.jsp", 1, 48);
    _caucho_line_map.add("/inc/init_global.jsp", 1, 53);
    _caucho_line_map.add("/usr/local/apache/htdocs/ntvmir/vote/xt_vote.jsp", 7, 97);
    _caucho_line_map.add(8, 99);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(mergePath.lookup("file:/usr/local/apache/htdocs/ntvmir/inc/init_global.jsp"), 1043852040000L, 1646L);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("file:/usr/local/apache/htdocs/ntvmir/vote/xt_vote.jsp"), 1042721354000L, 697L);
    _caucho_depends.add(depend);
  }

  private static byte []_jsp_string1;
  private static byte []_jsp_string0;
  static {
    try {
      _jsp_string1 = "\r\n\r\n".getBytes("Cp1251");
      _jsp_string0 = "\r\n".getBytes("Cp1251");
    } catch (java.io.UnsupportedEncodingException e) {
      e.printStackTrace();
    }
  }
}
